import React, { useEffect, useState } from 'react';
import { Card, CardContent, CardHeader, Grid, Button, ButtonGroup } from "@mui/material";
import { useDataProvider, usePermissions, RaRecord } from 'react-admin';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, BarChart, Bar } from "recharts";
import { v4 as uuidv4 } from 'uuid';

// Define the Donation interface to match your data
interface Donation extends RaRecord {
  id: string;
  monto: number;
  fecha: string;
  donador: {
    nombre: string;
    apellido: string;
    email: string;
  };
}

export const Dashboard = () => {
  const dataProvider = useDataProvider();
  const { permissions } = usePermissions();
  const [donationData, setDonationData] = useState<Donation[]>([]);
  const [viewBy, setViewBy] = useState<'donor' | 'date'>('date'); // State for data view (by donor or date)

  console.log("printing donariondata",donationData);
  useEffect(() => {
    console.log("Permissions:", permissions);  // Debug permissions
  }, [permissions]);

  useEffect(() => {
    dataProvider.getList<Donation>('donaciones', {
      pagination: { page: 1, perPage: 100 }, 
      sort: { field: 'fecha', order: 'ASC' }
    })
    .then(response => {
      setDonationData(response.data);
    })
    .catch(error => {
      console.error('Error fetching donation data:', error);
    });
  }, [dataProvider]);

  // Sacar estadisticas
  let totalDonationMoney = 0;
  const uniqueDonations = donationData.length;
  donationData.forEach((donation) => {
    totalDonationMoney+= donation.monto;
  });
  const averageDonation = totalDonationMoney / uniqueDonations;

  // Prepare data for PieChart (hide donor name for executives)
  const pieChartData = donationData.reduce((acc, donation) => {
    const key = viewBy === 'donor' && permissions === 'admin' 
      ? donation.donador.nombre // Show donor name for admin
      : viewBy === 'date' 
      ? donation.fecha // Show date for both
      : 'Hidden'; // Hide donor name for executives

    const existingEntry = acc.find(entry => entry.name === key);

    if (existingEntry) {
      existingEntry.value += donation.monto;
    } else {
      acc.push({ name: key, value: donation.monto });
    }

    return acc;
  }, [] as { name: string; value: number }[]);

  // Prepare data for BarChart (hide donor name for executives)
  const barChartData = donationData.map(donation => ({
    name: viewBy === 'donor' && permissions === 'admin'
      ? donation.donador.nombre // Show donor name for admin
      : viewBy === 'date'
      ? donation.fecha // Show date for both
      : 'Hidden', // Hide donor name for executives
    monto: donation.monto,
  }));

  return (
    <Grid container spacing={3}>
      {/* Welcome Card */}
      <Grid item xs={12}>
        <Card>
          <CardHeader title="Welcome to the Admin Dashboard" />
          <CardContent>
            <p>Manage and monitor donations efficiently.</p>
          </CardContent>
        </Card>
      </Grid>

      {/* Toggle for View By */}
      {permissions === 'admin' && (
        <Grid item xs={12}>
          <Card>
            <CardContent>
              <ButtonGroup variant="contained" aria-label="outlined secondary button group">
                <Button onClick={() => setViewBy('date')}>View by Date</Button>
                <Button onClick={() => setViewBy('donor')}>View by Donor</Button>
              </ButtonGroup>
            </CardContent>
          </Card>
        </Grid>
      )}

      {/* Donation Statistics */}
<Grid item xs={12} md={6}>
  <Card >
    <CardHeader 
      title="Donation Stats" 
      style={{ fontWeight: 'bold', fontSize: '1.5rem', paddingBottom: '0' }} 
    />
    <CardContent>
      <h2 style={{ textAlign: 'center', fontSize: '1.1rem', margin: '10px 0' }}>Number of Donations</h2>
      <h3 style={{ textAlign: 'center', fontSize: '2rem', marginTop: '10px' }}>{uniqueDonations}</h3>

      <h2 style={{ textAlign: 'center', fontSize: '1.1rem', margin: '10px 0' }}>Total Donation Money</h2>
      <h3 style={{ textAlign: 'center', fontSize: '2rem', marginTop: '10px' }}>${totalDonationMoney}</h3>

      <h2 style={{ textAlign: 'center', fontSize: '1.1rem', margin: '10px 0' }}>Average Donation Amount</h2>
      <h3 style={{ textAlign: 'center', fontSize: '2rem', marginTop: '10px' }}>${averageDonation}</h3>
    </CardContent>
  </Card>
</Grid>


      {/* Line Chart */}
      <Grid item xs={12} md={6}>
        <Card>
          <CardHeader title="Donations Over Time" />
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={donationData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey={viewBy === 'donor' && permissions === 'admin' ? 'donador.nombre' : 'fecha'} />
                <YAxis />
                <Tooltip />
                <Legend />
                <Line type="monotone" dataKey="monto" stroke="#8884d8" activeDot={{ r: 8 }} />
              </LineChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </Grid>

      {/* Pie Chart */}
      <Grid item xs={12} md={6}>
        <Card>
          <CardHeader title="Donations Distribution" />
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <PieChart>
                <Pie dataKey="value" data={pieChartData} cx="50%" cy="50%" outerRadius={80} fill="#82ca9d" label>
                  {pieChartData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={['#8884d8', '#8dd1e1', '#82ca9d', '#ffc658'][index % 4]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </Grid>

      {/* Bar Chart */}
      <Grid item xs={12} md={6}>
        <Card>
          <CardHeader title="Donations Comparison" />
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={barChartData}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Bar dataKey="monto" fill="#8884d8" />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      </Grid>
    </Grid>
  );
};

--------------------------

Donaciones:

import {List,Datagrid,DateInput,TextField,SelectInput,TextInput,ReferenceInput,SimpleList,EmailField,ReferenceField, EditButton, Edit, Create,SimpleForm, NumberInput,required,DeleteButton,NumberInputProps,TextInputProps} from "react-admin"
import { useWatch } from "react-hook-form";
export const DonadoresList = () => (

<List>
    <Datagrid>
        <TextField source="monto"/>
        <TextField source="fecha"/>
        <TextField source="metodo"/>
        <TextField source= "donador.nombre"/>
        <TextField source= "donador.apellido"/>
<EditButton/>
<DeleteButton/>
    </Datagrid>


</List>

);
const EditableDonationField1 = (props: NumberInputProps) => {
    const metodoValue = useWatch({ name: 'metodo' });  // Watch the "metodo" field value

    return (
        <NumberInput
            {...props}
            disabled={metodoValue !== 'manual'}  // Disable if "metodo" is not "manual"
        />
    );
};
const EditableDonationField2 = (props: TextInputProps) => {
    const metodoValue = useWatch({ name: 'metodo' });  // Watch the "metodo" field value

    return (
        <TextInput
            {...props}
            disabled={metodoValue !== 'manual'}  // Disable if "metodo" is not "manual"
        />
    );
};

export const DonadoresEdit = () => (
<Edit>
    <SimpleForm>

        <EditableDonationField2 source = "donador.nombre"/>
        <EditableDonationField2 source = "donador.apellido"/>
        <EditableDonationField2 source = "fecha"/>
        <EditableDonationField1 source = "monto"/>
    </SimpleForm>




</Edit>





)

export const DonadoresCreate = ()=>(
    <Create>
        <SimpleForm>
        <NumberInput source="monto"></NumberInput>
        <DateInput source="fecha"></DateInput>
        <TextInput source="metodo" defaultValue="manual" disabled/>
        <TextInput source = "donador.nombre"></TextInput>
        <TextInput source = "donador.apellido"></TextInput>
        <TextInput source = "donador.email"></TextInput>
        
        </SimpleForm>
    </Create>
)


------------App.tsx:
// App.tsx
import React from 'react';
import { Admin, Resource } from 'react-admin';
import { useMode, ColorModeContext } from './theme';
import Layout from './layouts/Layout';
import { UserCreate, UserEdit, UserList } from './Pages/Users/Users';
import { DonadoresList, DonadoresCreate, DonadoresEdit } from './Pages/Donaciones/Donaciones';
import { authProvider } from './providers/authProvider';
import { Dashboard } from './Pages/Dashboard/Dashboard';
import PostIcon from "@mui/icons-material/MonetizationOnOutlined";
import UserIcon from "@mui/icons-material/PeopleOutlined";
import { MyLoginPage } from "./LogIn";
import { basedatos } from "./providers/dataprovider";
import { i18nProvider } from "./providers/i18nProvider";
import { ProSidebarProvider } from 'react-pro-sidebar';

export const App = () => {
  const [theme, colorMode] = useMode();

  return (
    <ColorModeContext.Provider value={colorMode}>
      <ProSidebarProvider>
      <Admin
        loginPage={MyLoginPage}
        authProvider={authProvider}
        i18nProvider={i18nProvider}
        layout={Layout}
        dashboard={Dashboard}
        dataProvider={basedatos}
        theme={theme}
      >
        <Resource
          name="usuarios"
          list={UserList}
          edit={UserEdit}
          create={UserCreate}
          icon={UserIcon}
        />
        <Resource
          name="donaciones"
          list={DonadoresList}
          edit={DonadoresEdit}
          create={DonadoresCreate}
          icon={PostIcon}
        />
        {/* Otros recursos si los hay */}
      </Admin>
      </ProSidebarProvider>
    </ColorModeContext.Provider>
  );
};

export default App;
